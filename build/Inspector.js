// Generated by CoffeeScript 1.7.1
(function() {
  var Inspector, assert, _;

  assert = require('assert');

  _ = require('underscore');

  Inspector = (function() {
    function Inspector() {}

    Inspector.prototype.getDependencies = function(func) {
      var hints, params;
      assert(func != null, 'The argument "func" must have a value');
      params = this.getParameterNames(func);
      hints = this.getDependencyHints(func);
      return _.map(params, function(param) {
        var _ref;
        return (_ref = hints[param]) != null ? _ref : param;
      });
    };

    Inspector.prototype.getParameterNames = function(func) {
      var matches, regex;
      assert(func != null, 'The argument "func" must have a value');
      regex = /function .*\(([^)]+)/g;
      matches = regex.exec(func.toString());
      if ((matches == null) || matches[1].length === 0) {
        return [];
      }
      return matches[1].split(/[,\s]+/);
    };

    Inspector.prototype.getDependencyHints = function(func) {
      var argument, dependency, hint, hints, match, regex;
      assert(func != null, 'The argument "func" must have a value');
      regex = /"(.*?)\s*->\s*(.*?)";/g;
      hints = {};
      while (match = regex.exec(func.toString())) {
        hint = match[0], argument = match[1], dependency = match[2];
        hints[argument] = dependency;
      }
      return hints;
    };

    Inspector.prototype.isAutoConstructor = function(constructor) {
      var body, name;
      assert(constructor != null, 'The argument "constructor" must have a value');
      name = constructor.name;
      body = constructor.toString();
      return body.indexOf("" + name + ".__super__.constructor.apply(this, arguments);") > 0;
    };

    return Inspector;

  })();

  module.exports = Inspector;

}).call(this);
